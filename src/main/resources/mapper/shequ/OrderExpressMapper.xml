<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guoan.dao.shequ.OrderExpressMapper" >
  <resultMap id="BaseResultMap" type="com.guoan.entity.shequ.bo.OrderExpress" >
    <id column="express_id" property="expressId" jdbcType="VARCHAR" />
    <result column="goods_info" property="goodsInfo" jdbcType="VARCHAR" />
    <result column="goods_weight" property="goodsWeight" jdbcType="DOUBLE" />
    <result column="express_order" property="expressOrder" jdbcType="VARCHAR" />
    <result column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="provider_name" property="providerName" jdbcType="VARCHAR" />
    <result column="dispatcher_type" property="dispatcherType" jdbcType="VARCHAR" />
    <result column="target_address" property="targetAddress" jdbcType="VARCHAR" />
    <result column="source_address" property="sourceAddress" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    express_id, goods_info, goods_weight, express_order, provider_id, provider_name, 
    dispatcher_type, target_address, source_address
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guoan.entity.shequ.bo.OrderExpressCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order_express
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_order_express
    where express_id = #{expressId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_order_express
    where express_id = #{expressId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.guoan.entity.shequ.bo.OrderExpressCriteria" >
    delete from t_order_express
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guoan.entity.shequ.bo.OrderExpress" >
    insert into t_order_express (express_id, goods_info, goods_weight, 
      express_order, provider_id, provider_name, 
      dispatcher_type, target_address, source_address
      )
    values (#{expressId,jdbcType=VARCHAR}, #{goodsInfo,jdbcType=VARCHAR}, #{goodsWeight,jdbcType=DOUBLE}, 
      #{expressOrder,jdbcType=VARCHAR}, #{providerId,jdbcType=INTEGER}, #{providerName,jdbcType=VARCHAR}, 
      #{dispatcherType,jdbcType=VARCHAR}, #{targetAddress,jdbcType=VARCHAR}, #{sourceAddress,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.guoan.entity.shequ.bo.OrderExpress" >
    insert into t_order_express
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="expressId != null" >
        express_id,
      </if>
      <if test="goodsInfo != null" >
        goods_info,
      </if>
      <if test="goodsWeight != null" >
        goods_weight,
      </if>
      <if test="expressOrder != null" >
        express_order,
      </if>
      <if test="providerId != null" >
        provider_id,
      </if>
      <if test="providerName != null" >
        provider_name,
      </if>
      <if test="dispatcherType != null" >
        dispatcher_type,
      </if>
      <if test="targetAddress != null" >
        target_address,
      </if>
      <if test="sourceAddress != null" >
        source_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="expressId != null" >
        #{expressId,jdbcType=VARCHAR},
      </if>
      <if test="goodsInfo != null" >
        #{goodsInfo,jdbcType=VARCHAR},
      </if>
      <if test="goodsWeight != null" >
        #{goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="expressOrder != null" >
        #{expressOrder,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        #{providerId,jdbcType=INTEGER},
      </if>
      <if test="providerName != null" >
        #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="dispatcherType != null" >
        #{dispatcherType,jdbcType=VARCHAR},
      </if>
      <if test="targetAddress != null" >
        #{targetAddress,jdbcType=VARCHAR},
      </if>
      <if test="sourceAddress != null" >
        #{sourceAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guoan.entity.shequ.bo.OrderExpressCriteria" resultType="java.lang.Integer" >
    select count(*) from t_order_express
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order_express
    <set >
      <if test="record.expressId != null" >
        express_id = #{record.expressId,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsInfo != null" >
        goods_info = #{record.goodsInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.goodsWeight != null" >
        goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.expressOrder != null" >
        express_order = #{record.expressOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.providerId != null" >
        provider_id = #{record.providerId,jdbcType=INTEGER},
      </if>
      <if test="record.providerName != null" >
        provider_name = #{record.providerName,jdbcType=VARCHAR},
      </if>
      <if test="record.dispatcherType != null" >
        dispatcher_type = #{record.dispatcherType,jdbcType=VARCHAR},
      </if>
      <if test="record.targetAddress != null" >
        target_address = #{record.targetAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.sourceAddress != null" >
        source_address = #{record.sourceAddress,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order_express
    set express_id = #{record.expressId,jdbcType=VARCHAR},
      goods_info = #{record.goodsInfo,jdbcType=VARCHAR},
      goods_weight = #{record.goodsWeight,jdbcType=DOUBLE},
      express_order = #{record.expressOrder,jdbcType=VARCHAR},
      provider_id = #{record.providerId,jdbcType=INTEGER},
      provider_name = #{record.providerName,jdbcType=VARCHAR},
      dispatcher_type = #{record.dispatcherType,jdbcType=VARCHAR},
      target_address = #{record.targetAddress,jdbcType=VARCHAR},
      source_address = #{record.sourceAddress,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guoan.entity.shequ.bo.OrderExpress" >
    update t_order_express
    <set >
      <if test="goodsInfo != null" >
        goods_info = #{goodsInfo,jdbcType=VARCHAR},
      </if>
      <if test="goodsWeight != null" >
        goods_weight = #{goodsWeight,jdbcType=DOUBLE},
      </if>
      <if test="expressOrder != null" >
        express_order = #{expressOrder,jdbcType=VARCHAR},
      </if>
      <if test="providerId != null" >
        provider_id = #{providerId,jdbcType=INTEGER},
      </if>
      <if test="providerName != null" >
        provider_name = #{providerName,jdbcType=VARCHAR},
      </if>
      <if test="dispatcherType != null" >
        dispatcher_type = #{dispatcherType,jdbcType=VARCHAR},
      </if>
      <if test="targetAddress != null" >
        target_address = #{targetAddress,jdbcType=VARCHAR},
      </if>
      <if test="sourceAddress != null" >
        source_address = #{sourceAddress,jdbcType=VARCHAR},
      </if>
    </set>
    where express_id = #{expressId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guoan.entity.shequ.bo.OrderExpress" >
    update t_order_express
    set goods_info = #{goodsInfo,jdbcType=VARCHAR},
      goods_weight = #{goodsWeight,jdbcType=DOUBLE},
      express_order = #{expressOrder,jdbcType=VARCHAR},
      provider_id = #{providerId,jdbcType=INTEGER},
      provider_name = #{providerName,jdbcType=VARCHAR},
      dispatcher_type = #{dispatcherType,jdbcType=VARCHAR},
      target_address = #{targetAddress,jdbcType=VARCHAR},
      source_address = #{sourceAddress,jdbcType=VARCHAR}
    where express_id = #{expressId,jdbcType=VARCHAR}
  </update>
  
  <!-- 开始 -->
  
  <resultMap id="OrderMap" type="com.guoan.entity.shequ.bo.OrderExpress" >
  
    <id column="express_id" property="expressId" jdbcType="VARCHAR" />
    <result column="goods_info" property="goodsInfo" jdbcType="VARCHAR" />
    <result column="goods_weight" property="goodsWeight" jdbcType="DOUBLE" />
    <result column="express_order" property="expressOrder" jdbcType="VARCHAR" />
    <result column="provider_id" property="providerId" jdbcType="INTEGER" />
    <result column="provider_name" property="providerName" jdbcType="VARCHAR" />
    <result column="dispatcher_type" property="dispatcherType" jdbcType="VARCHAR" />
    <result column="target_address" property="targetAddress" jdbcType="VARCHAR" />
    <result column="source_address" property="sourceAddress" jdbcType="VARCHAR" />
    
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="order_sn" property="orderSn" jdbcType="VARCHAR" />
    <result column="order_telephone" property="orderTelephone" jdbcType="VARCHAR" />
    <result column="order_contact" property="orderContact" jdbcType="VARCHAR" />
    <result column="order_address" property="orderAddress" jdbcType="VARCHAR" />
    <result column="order_remark" property="orderRemark" jdbcType="VARCHAR" />
    <result column="appointment_begin_time" property="appointmentBeginTime" jdbcType="TIMESTAMP" />
    <result column="appointment_end_time" property="appointmentEndTime" jdbcType="TIMESTAMP" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="service_user_id" property="serviceUserId" jdbcType="VARCHAR" />
    <result column="service_telephone" property="serviceTelephone" jdbcType="VARCHAR" />
    <result column="service_contact" property="serviceContact" jdbcType="VARCHAR" />
    <result column="service_type" property="serviceType" jdbcType="VARCHAR" />
    <result column="service_remark" property="serviceRemark" jdbcType="VARCHAR" />
    <result column="order_amount" property="orderAmount" jdbcType="DOUBLE" />
    <result column="order_reduce" property="orderReduce" jdbcType="DOUBLE" />
    <result column="order_paid" property="orderPaid" jdbcType="DOUBLE" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="flow_status" property="flowStatus" jdbcType="INTEGER" />
    <result column="flow_status_name" property="flowStatusName" jdbcType="VARCHAR" />
    <result column="is_evaluation" property="isEvaluation" jdbcType="INTEGER" />
    <result column="evaluation_attitude" property="evaluationAttitude" jdbcType="INTEGER" />
    <result column="evaluation_quality" property="evaluationQuality" jdbcType="INTEGER" />
    <result column="evaluation_remark" property="evaluationRemark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="payment_type" property="paymentType" jdbcType="INTEGER" />
    <result column="payment_type_name" property="paymentTypeName" jdbcType="VARCHAR" />
    <result column="is_cancel" property="isCancel" jdbcType="INTEGER" />
    <result column="cancel_remark" property="cancelRemark" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="getOrderList" parameterType="map"  resultMap="OrderMap" >
  	select r.*, o.*
     from t_order_express r, t_order o
     
      <include refid="Select_Order_List_Where_Clause" />
      
    <if test="record.orderByClause != null" >
      order by ${record.orderByClause}
    </if>
    <if test="record.limitStart != null and record.limitStart>=0" >
      limit #{record.limitStart} , #{record.limitEnd}
    </if>
  </select>
  
  <select id="selectByExpressId" parameterType="java.lang.String"  resultMap="OrderMap" >
  	select r.*, o.*
    from t_order o LEFT JOIN t_order_express r
    on r.express_id = o.order_id
    where r.express_id = #{expressId,jdbcType=VARCHAR} and o.order_status != 0
  </select>
  
  <select id="getOrderListCount" resultType="java.lang.Integer"  parameterType="map" >
  	select count(*) from t_order_express r, t_order o
      <include refid="Select_Order_List_Where_Clause" />
  </select>
  
  <sql id="Select_Order_List_Where_Clause" >
  	<where>
  		and r.express_id = o.order_id
  		and o.order_status = #{record.orderStatus,jdbcType=INTEGER}
  		<if test="record.userId != null" >
  			and o.user_id = #{record.userId,jdbcType=VARCHAR}
  		</if>
  		<if test="record.serviceUserId != null" >
  			and o.service_user_id = #{record.serviceUserId,jdbcType=VARCHAR}
  		</if>
  		<if test="record.flowStatusList != null" >
  		 	and o.flow_status in
      		<foreach collection="record.flowStatusList" item="status" open="(" close=")" separator="," >
                    #{status}
      		</foreach>
  		</if>
  	</where>
  </sql>
  
</mapper>