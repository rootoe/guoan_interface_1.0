<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guoan.dao.shequ.ChatMessageMapper" >
  <resultMap id="BaseResultMap" type="com.guoan.entity.shequ.bo.ChatMessage" >
    <id column="msg_id" property="msgId" jdbcType="VARCHAR" />
    <result column="conversation_id" property="conversationId" jdbcType="VARCHAR" />
    <result column="from_user_id" property="fromUserId" jdbcType="VARCHAR" />
    <result column="to_user_id" property="toUserId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="is_read" property="isRead" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.guoan.entity.shequ.bo.ChatMessage" extends="BaseResultMap" >
    <result column="body" property="body" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    msg_id, conversation_id, from_user_id, to_user_id, type, is_read, create_time
  </sql>
  <sql id="Blob_Column_List" >
    body
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.guoan.entity.shequ.bo.ChatMessageCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_chat_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guoan.entity.shequ.bo.ChatMessageCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_chat_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_chat_message
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_chat_message
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.guoan.entity.shequ.bo.ChatMessageCriteria" >
    delete from t_chat_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guoan.entity.shequ.bo.ChatMessage" >
    insert into t_chat_message (msg_id, conversation_id, from_user_id, 
      to_user_id, type, is_read, create_time, 
      body)
    values (#{msgId,jdbcType=VARCHAR}, #{conversationId,jdbcType=VARCHAR}, #{fromUserId,jdbcType=VARCHAR}, 
      #{toUserId,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, #{isRead,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{body,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.guoan.entity.shequ.bo.ChatMessage" >
    insert into t_chat_message
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="conversationId != null" >
        conversation_id,
      </if>
      <if test="fromUserId != null" >
        from_user_id,
      </if>
      <if test="toUserId != null" >
        to_user_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="body != null" >
        body,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="msgId != null" >
        #{msgId,jdbcType=VARCHAR},
      </if>
      <if test="conversationId != null" >
        #{conversationId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null" >
        #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null" >
        #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="body != null" >
        #{body,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guoan.entity.shequ.bo.ChatMessageCriteria" resultType="java.lang.Integer" >
    select count(*) from t_chat_message
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_chat_message
    <set >
      <if test="record.msgId != null" >
        msg_id = #{record.msgId,jdbcType=VARCHAR},
      </if>
      <if test="record.conversationId != null" >
        conversation_id = #{record.conversationId,jdbcType=VARCHAR},
      </if>
      <if test="record.fromUserId != null" >
        from_user_id = #{record.fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.toUserId != null" >
        to_user_id = #{record.toUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.isRead != null" >
        is_read = #{record.isRead,jdbcType=CHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.body != null" >
        body = #{record.body,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update t_chat_message
    set msg_id = #{record.msgId,jdbcType=VARCHAR},
      conversation_id = #{record.conversationId,jdbcType=VARCHAR},
      from_user_id = #{record.fromUserId,jdbcType=VARCHAR},
      to_user_id = #{record.toUserId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=CHAR},
      is_read = #{record.isRead,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      body = #{record.body,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_chat_message
    set msg_id = #{record.msgId,jdbcType=VARCHAR},
      conversation_id = #{record.conversationId,jdbcType=VARCHAR},
      from_user_id = #{record.fromUserId,jdbcType=VARCHAR},
      to_user_id = #{record.toUserId,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=CHAR},
      is_read = #{record.isRead,jdbcType=CHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guoan.entity.shequ.bo.ChatMessage" >
    update t_chat_message
    <set >
      <if test="conversationId != null" >
        conversation_id = #{conversationId,jdbcType=VARCHAR},
      </if>
      <if test="fromUserId != null" >
        from_user_id = #{fromUserId,jdbcType=VARCHAR},
      </if>
      <if test="toUserId != null" >
        to_user_id = #{toUserId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=CHAR},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="body != null" >
        body = #{body,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.guoan.entity.shequ.bo.ChatMessage" >
    update t_chat_message
    set conversation_id = #{conversationId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      is_read = #{isRead,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      body = #{body,jdbcType=LONGVARCHAR}
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guoan.entity.shequ.bo.ChatMessage" >
    update t_chat_message
    set conversation_id = #{conversationId,jdbcType=VARCHAR},
      from_user_id = #{fromUserId,jdbcType=VARCHAR},
      to_user_id = #{toUserId,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      is_read = #{isRead,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where msg_id = #{msgId,jdbcType=VARCHAR}
  </update>
</mapper>