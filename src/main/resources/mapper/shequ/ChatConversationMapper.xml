<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.guoan.dao.shequ.ChatConversationMapper" >
  <resultMap id="BaseResultMap" type="com.guoan.entity.shequ.bo.ChatConversation" >
    <id column="conversation_id" property="conversationId" jdbcType="VARCHAR" />
    <result column="a_user_id" property="aUserId" jdbcType="VARCHAR" />
    <result column="b_user_id" property="bUserId" jdbcType="VARCHAR" />
    <result column="a_unread" property="aUnread" jdbcType="INTEGER" />
    <result column="b_unread" property="bUnread" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    conversation_id, a_user_id, b_user_id, a_unread, b_unread
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.guoan.entity.shequ.bo.ChatConversationCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_chat_conversation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_chat_conversation
    where conversation_id = #{conversationId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_chat_conversation
    where conversation_id = #{conversationId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.guoan.entity.shequ.bo.ChatConversationCriteria" >
    delete from t_chat_conversation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guoan.entity.shequ.bo.ChatConversation" >
    insert into t_chat_conversation (conversation_id, a_user_id, b_user_id, 
      a_unread, b_unread)
    values (#{conversationId,jdbcType=VARCHAR}, #{aUserId,jdbcType=VARCHAR}, #{bUserId,jdbcType=VARCHAR}, 
      #{aUnread,jdbcType=INTEGER}, #{bUnread,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.guoan.entity.shequ.bo.ChatConversation" >
    insert into t_chat_conversation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="conversationId != null" >
        conversation_id,
      </if>
      <if test="aUserId != null" >
        a_user_id,
      </if>
      <if test="bUserId != null" >
        b_user_id,
      </if>
      <if test="aUnread != null" >
        a_unread,
      </if>
      <if test="bUnread != null" >
        b_unread,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="conversationId != null" >
        #{conversationId,jdbcType=VARCHAR},
      </if>
      <if test="aUserId != null" >
        #{aUserId,jdbcType=VARCHAR},
      </if>
      <if test="bUserId != null" >
        #{bUserId,jdbcType=VARCHAR},
      </if>
      <if test="aUnread != null" >
        #{aUnread,jdbcType=INTEGER},
      </if>
      <if test="bUnread != null" >
        #{bUnread,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.guoan.entity.shequ.bo.ChatConversationCriteria" resultType="java.lang.Integer" >
    select count(*) from t_chat_conversation
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_chat_conversation
    <set >
      <if test="record.conversationId != null" >
        conversation_id = #{record.conversationId,jdbcType=VARCHAR},
      </if>
      <if test="record.aUserId != null" >
        a_user_id = #{record.aUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.bUserId != null" >
        b_user_id = #{record.bUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.aUnread != null" >
        a_unread = #{record.aUnread,jdbcType=INTEGER},
      </if>
      <if test="record.bUnread != null" >
        b_unread = #{record.bUnread,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_chat_conversation
    set conversation_id = #{record.conversationId,jdbcType=VARCHAR},
      a_user_id = #{record.aUserId,jdbcType=VARCHAR},
      b_user_id = #{record.bUserId,jdbcType=VARCHAR},
      a_unread = #{record.aUnread,jdbcType=INTEGER},
      b_unread = #{record.bUnread,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.guoan.entity.shequ.bo.ChatConversation" >
    update t_chat_conversation
    <set >
      <if test="aUserId != null" >
        a_user_id = #{aUserId,jdbcType=VARCHAR},
      </if>
      <if test="bUserId != null" >
        b_user_id = #{bUserId,jdbcType=VARCHAR},
      </if>
      <if test="aUnread != null" >
        a_unread = #{aUnread,jdbcType=INTEGER},
      </if>
      <if test="bUnread != null" >
        b_unread = #{bUnread,jdbcType=INTEGER},
      </if>
    </set>
    where conversation_id = #{conversationId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guoan.entity.shequ.bo.ChatConversation" >
    update t_chat_conversation
    set a_user_id = #{aUserId,jdbcType=VARCHAR},
      b_user_id = #{bUserId,jdbcType=VARCHAR},
      a_unread = #{aUnread,jdbcType=INTEGER},
      b_unread = #{bUnread,jdbcType=INTEGER}
    where conversation_id = #{conversationId,jdbcType=VARCHAR}
  </update>
</mapper>